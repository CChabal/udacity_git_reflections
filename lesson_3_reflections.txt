-When would you want to create a remote repository rather than keeping all your work local?

If I'm working on different computers. Or, usually when I'm collaborating on projects and code with other people such as coworkers etc.

-Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because I want to work on my own pace, instead of Git automatically changing my work for me and pulling commits that I'm not ready for.

-Describe the differences between forks, clones, and branches. When would you use one instead of another.

By cloning you make a copy of a repository which will be saved on your computer. You could also clone repositories locals. Fork has the same function as a clone but it's done remotely. On GitHub to be precise. Branches are basically pointers to a particular series of commits. They can diverge into other commits (branch of) for feature testing for example.

-What is the benefit of having a copy of the last known state of the remote stored locally?

It's easier to work with. Using commands as diff and log.

-How would you collaborate without using Git or GitHub? What would be easier, and what
would be harder?

In that case the collaboration would occur sitting next to me co-workers and with post-its. This would make it hard and my legs would turn into jello if I had to run around checking all the different changes all the time between us co-workers.

-When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When working on a feature or on bugs the ideal would be to make the changes in a separate branch. And perhaps when several people are working on the same project.
Working on master is much faster but the aftermath is much more, pulling changes, marge the off branch into master, push the master and merge again.